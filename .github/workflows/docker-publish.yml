name: Build and Publish Docker Image

on:
  push:
    tags:
      - 'v*.*.*'      # Trigger on version tags (v1.0.0, v2.1.3, etc.)
      - 'v*.*.*-*'    # Also support pre-release tags (v1.0.0-beta, v1.0.0-rc1, etc.)

env:
  DOCKER_IMAGE: hypolas/proxy-docker
  PLATFORMS: linux/amd64,linux/arm64 #,linux/arm/v7

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify Dockerfile exists
        run: |
          if [ ! -f Dockerfile ]; then
            echo "❌ Error: Dockerfile not found in repository root"
            exit 1
          fi
          echo "✅ Dockerfile found"

      - name: Show Git ref info
        run: |
          echo "Git ref: ${{ github.ref }}"
          echo "Git ref name: ${{ github.ref_name }}"
          echo "Git ref type: ${{ github.ref_type }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            # Git tag v1.2.3 → Docker tag 1.2.3 (removes 'v' prefix)
            type=semver,pattern={{version}}
            # Git tag v1.2.3 → Docker tag 1.2 (major.minor)
            type=semver,pattern={{major}}.{{minor}}
            # Git tag v1.2.3 → Docker tag 1 (major only)
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            # Fallback for non-standard semver tags (e.g., v0.1.0-beta.01)
            type=match,pattern=v(.*),group=1
            # Always tag as 'latest' for stable releases (non-prerelease)
            type=raw,value=latest,enable=${{ !contains(github.ref, '-') }}

      - name: Debug - Show generated tags
        run: |
          echo "Generated tags:"
          echo "${{ steps.meta.outputs.tags }}"
          echo ""
          echo "Generated labels:"
          echo "${{ steps.meta.outputs.labels }}"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ github.ref_name }}
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            VCS_REF=${{ github.sha }}

      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.DOCKER_IMAGE }}
          short-description: "Secure Docker Socket Proxy with advanced filtering for CI/CD"
          readme-filepath: ./README.md

      - name: Generate release summary
        run: |
          echo "## 🐳 Docker Image Published" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ env.DOCKER_IMAGE }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Git Tag:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Docker Tags Created:**" >> $GITHUB_STEP_SUMMARY
          echo "> Note: The 'v' prefix is automatically removed from Docker tags" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Platforms:** \`${{ env.PLATFORMS }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Pull command:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "# Using semantic version (v prefix removed)" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.DOCKER_IMAGE }}:${GITHUB_REF_NAME#v}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Or use latest" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.DOCKER_IMAGE }}:latest" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
